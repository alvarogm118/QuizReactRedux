{"version":3,"sources":["redux/actions.js","redux/reducers.js","components/Popup.js","components/Actionbar.jsx","components/Question.jsx","components/Answer.jsx","components/Content.jsx","components/Game.jsx","components/Navbar.jsx","components/App.jsx","redux/ReduxProvider.js","serviceWorker.js","index.js"],"names":["QUESTION_ANSWER","CHANGE_QUESTION","SUBMIT","INIT_QUESTIONS","RESET","CLOSE_POPUP","changeQuestion","index","type","payload","GlobalState","combineReducers","score","state","action","questions","filter","question","answer","userAnswer","length","finished","currentQuestion","map","i","showPopup","Popup","className","this","props","onClick","onClosePopup","React","Component","Actionbar","Button","variant","onChangeQuestion","disabled","onReset","onSubmit","dispatch","Question","pregunta","Answer","placeholder","value","onChange","e","onQuestionAnswer","target","Content","DropdownButton","title","Dropdown","Item","questionAnswer","tips","tip","key","attachment","src","url","author","photo","username","Game","newId","Reset","fetch","newQuestions","json","onInitQuestions","then","res","Navbar","connect","newQ","ReduxProvider","initialState","store","configureStore","style","height","createStore","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qSAAaA,EAAkB,kBAClBC,EAAkB,kBAClBC,EAAS,SACTC,EAAiB,iBACjBC,EAAQ,QACRC,EAAc,cASpB,SAASC,EAAeC,GAC3B,MAAO,CACHC,KAAMP,EACNQ,QAAS,CAACF,U,8NCqDlB,IAQeG,EARMC,YAAgB,CACjCC,MAhEJ,WAAwC,IAAzBC,EAAwB,uDAAhB,EAAGC,EAAa,uDAAJ,GAC/B,OAAQA,EAAON,MACX,KAAKN,EAED,OADWY,EAAOL,QAAQM,UAAUC,QAAO,SAAAC,GAAQ,OAAIA,EAASC,SAAWD,EAASE,cACxEC,OAChB,KAAKhB,EACD,OAAO,EACX,QACI,OAAOS,IAyDfQ,SArDJ,WAA+C,IAA7BR,EAA4B,wDAC1C,QAD0C,uDAAJ,IACvBL,MACX,KAAKN,EACD,OAAO,EACX,KAAKE,EACD,OAAO,EACX,QACI,OAAOS,IA+CfS,gBA3CJ,WAAkD,IAAzBT,EAAwB,uDAAhB,EAAGC,EAAa,uDAAJ,GACzC,OAAQA,EAAON,MACX,KAAKP,EACD,OAAOa,EAAOL,QAAQF,MAC1B,KAAKH,EACD,OAAO,EACX,QACI,OAAOS,IAqCfE,UAjCJ,WAA6C,IAA1BF,EAAyB,uDAAjB,GAAIC,EAAa,uDAAJ,GACpC,OAAQA,EAAON,MACX,KAAKR,EACD,OAAOa,EAAMU,KAAI,SAACN,EAAUO,GACxB,O,yVAAO,CAAP,GACOP,EADP,CAEIE,WAAYL,EAAOL,QAAQF,QAAUiB,EAAIV,EAAOL,QAAQS,OAASD,EAASE,gBAGtF,KAAKhB,EACL,KAAKC,EACD,OAAOU,EAAOL,QAAQM,UAC1B,QACI,OAAOF,IAqBfY,UAjBJ,WAAgD,IAA7BZ,EAA4B,wDAC3C,QAD2C,uDAAJ,IACxBL,MACX,KAAKN,EACD,OAAO,EACX,KAAKG,EACL,KAAKD,EACD,OAAO,EACX,QACI,OAAOS,M,iCClDJa,E,iLAXP,OACI,yBAAKC,UAAU,SACX,yBAAKA,UAAU,iBACX,6CAAmBC,KAAKC,MAAMjB,MAA9B,SACA,4BAAQkB,QAASF,KAAKC,MAAME,cAA5B,kB,GANAC,IAAMC,W,QCELC,E,iLACP,IAAD,OACL,OACI,yBAAKP,UAAU,aACX,kBAACQ,EAAA,EAAD,CAAQC,QAAQ,OAAON,QAAS,kBAAM,EAAKD,MAAMQ,iBAAiB,EAAKR,MAAMP,gBAAkB,IACvFgB,SAAUV,KAAKC,MAAMP,gBAAkB,GAD/C,YAEA,kBAACa,EAAA,EAAD,CAAQC,QAAQ,OAAON,QAAS,kBAAM,EAAKD,MAAMQ,iBAAiB,EAAKR,MAAMP,gBAAkB,IACvFgB,SAAUV,KAAKC,MAAMP,gBAAkB,GAD/C,aAEA,kBAACa,EAAA,EAAD,CAAQC,QAAQ,OAAON,QAASF,KAAKC,MAAMU,SAA3C,SACA,kBAACJ,EAAA,EAAD,CAAQC,QAAQ,OAAON,QAASF,KAAKC,MAAMW,UAA3C,WAE0B,IAAzBZ,KAAKC,MAAMJ,UAAqB,kBAAC,EAAD,CAAOb,MAAOgB,KAAKC,MAAMjB,MAClBmB,aAAc,WACV,EAAKF,MAAMY,SHyB5D,CACHjC,KAAMH,OGzBiD,U,GAdxB2B,IAAMC,WCHxBS,E,iLAEb,OAAQ,gCAAMd,KAAKC,MAAMc,SAAjB,S,GAFsBX,IAAMC,WCAvBW,E,iLACP,IAAD,OACL,OACI,yBAAKjB,UAAU,UACX,2BAAOnB,KAAK,OACLqC,YAAY,mBACZC,MAAOlB,KAAKC,MAAMV,YAAc,GAChC4B,SAAU,SAACC,GAAD,OAAO,EAAKnB,MAAMoB,iBAAiBD,EAAEE,OAAOJ,e,GAPzCd,IAAMC,W,gBCIrBkB,E,iLACP,IAAD,OACL,OACI,yBAAKxB,UAAU,WACX,yBAAKA,UAAU,QACf,yBAAKA,UAAU,YACX,kBAACyB,EAAA,EAAD,CAAgBhB,QAAQ,OAAOiB,MAAM,mBACjC,kBAACC,EAAA,EAASC,KAAV,CAAezB,QAAS,kBAAM,EAAKD,MAAMQ,iBAAiB,KAA1D,cACA,kBAACiB,EAAA,EAASC,KAAV,CAAezB,QAAS,kBAAM,EAAKD,MAAMQ,iBAAiB,KAA1D,cACA,kBAACiB,EAAA,EAASC,KAAV,CAAezB,QAAS,kBAAM,EAAKD,MAAMQ,iBAAiB,KAA1D,cACA,kBAACiB,EAAA,EAASC,KAAV,CAAezB,QAAS,kBAAM,EAAKD,MAAMQ,iBAAiB,KAA1D,cACA,kBAACiB,EAAA,EAASC,KAAV,CAAezB,QAAS,kBAAM,EAAKD,MAAMQ,iBAAiB,KAA1D,cACA,kBAACiB,EAAA,EAASC,KAAV,CAAezB,QAAS,kBAAM,EAAKD,MAAMQ,iBAAiB,KAA1D,cACA,kBAACiB,EAAA,EAASC,KAAV,CAAezB,QAAS,kBAAM,EAAKD,MAAMQ,iBAAiB,KAA1D,cACA,kBAACiB,EAAA,EAASC,KAAV,CAAezB,QAAS,kBAAM,EAAKD,MAAMQ,iBAAiB,KAA1D,cACA,kBAACiB,EAAA,EAASC,KAAV,CAAezB,QAAS,kBAAM,EAAKD,MAAMQ,iBAAiB,KAA1D,cACA,kBAACiB,EAAA,EAASC,KAAV,CAAezB,QAAS,kBAAM,EAAKD,MAAMQ,iBAAiB,KAA1D,gBAEJ,wBAAIV,UAAU,aAAd,YAAoCC,KAAKC,MAAMP,gBAAkB,EAAjE,KACA,kBAAC,EAAD,CAAUqB,SAAUf,KAAKC,MAAMZ,SAASA,WACxC,kBAAC,EAAD,CACIgC,iBAAkB,SAAC/B,GAAY,EAAKW,MAAMY,SNpB3D,SAAwBlC,EAAOW,GAClC,MAAO,CACHV,KAAMR,EACNS,QAAS,CAACF,QAAOW,WMiBkDsC,CAAe,EAAK3B,MAAMP,gBAAiBJ,KAC9FC,WAAYS,KAAKC,MAAMZ,SAASE,aACpC,6BACI,oCAChBS,KAAKC,MAAMZ,SAASwC,KAAKlC,KAAI,SAACmC,EAAKlC,GAAN,OAAY,uBAAGmC,IAAKnC,GAAIkC,QAG7C,yBAAK/B,UAAU,WACyB,OAAnCC,KAAKC,MAAMZ,SAAS2C,WAAsB,GAAK,yBAAKC,IAAKjC,KAAKC,MAAMZ,SAAS2C,WAAWE,QAGzF,yBAAKnC,UAAU,QACX,yBAAKA,UAAU,QAAQkC,IAAKjC,KAAKC,MAAMZ,SAAS8C,OAAOC,MAAMF,MADjE,eAEiBlC,KAAKC,MAAMZ,SAAS8C,OAAOE,e,GAlC3BjC,IAAMC,WCDtBiC,E,iLACP,IAAD,OACL,OACI,yBAAKvC,UAAU,QACVC,KAAKC,MAAMd,UAAUK,OAAS,EAAI,kBAAC,EAAD,CAASH,SAAUW,KAAKC,MAAMd,UAAUa,KAAKC,MAAMP,iBAClFA,gBAAiBM,KAAKC,MAAMP,gBAC5Be,iBAAkB,SAAC8B,GACf,EAAKtC,MAAMY,SAASnC,EAAe6D,KAEvC1B,SAAUb,KAAKC,MAAMY,WAAc,UAEtCb,KAAKC,MAAMd,UAAUK,OAAS,EAC3B,kBAAC,EAAD,CAAWE,gBAAiBM,KAAKC,MAAMP,gBAC5Be,iBAAkB,SAAC8B,GACf,EAAKtC,MAAMY,SAASnC,EAAe6D,KAEvC3B,SAAU,WPAlC,IAAgBzB,EOCY,EAAKc,MAAMY,UPDvB1B,EOCuC,EAAKc,MAAMd,UPA9D,CACHP,KAAMN,EACNO,QAAS,CAACM,iBOAawB,QAAS,kBAAM,EAAK6B,SACpB/C,SAAUO,KAAKC,MAAMR,SACrBT,MAAOgB,KAAKC,MAAMjB,MAClB6B,SAAUb,KAAKC,MAAMY,SACrBhB,UAAWG,KAAKC,MAAMJ,YAAe,M,4KAMnC4C,MAAM,6E,cAA3BC,E,gBACkBA,EAAaC,O,OAA/BxD,E,OACJa,KAAKC,MAAM2C,gBAAgBzD,G,oIAGtB,IAAD,OACJsD,MAAM,6EACDI,MAAK,SAAAC,GAAG,OAAIA,EAAIH,UAChBE,MAAK,SAAAC,GAAG,OAAI,EAAK7C,MAAMU,QAAQmC,U,GArCV1C,IAAMC,WCHnB0C,E,iLAEb,OACI,6BACI,wBAAIhD,UAAU,UAAd,kB,GAJoBK,IAAMC,W,8NC+B3B2C,mBALf,SAAyB/D,GACrB,O,yVAAO,IACAA,KAGI+D,EA1Bf,SAAa/C,GACT,OACI,yBAAKF,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CACIZ,UAAWc,EAAMd,UACjBO,gBAAiBO,EAAMP,gBACvBkD,gBAAiB,SAACK,GACdhD,EAAMY,STqBf,CACHjC,KAAML,EACNM,QAAS,CAACM,USvB+B8D,MAEjCtC,QAAS,SAACsC,GACNhD,EAAMY,STWf,CACHjC,KAAMJ,EACNK,QAAS,CAACM,USbuB8D,MAEzBxD,SAAUQ,EAAMR,SAChBoB,SAAUZ,EAAMY,SAChB7B,MAAOiB,EAAMjB,MACba,UAAWI,EAAMJ,gBChBZqD,E,YACjB,WAAYjD,GAAQ,IAAD,8BACf,4CAAMA,KACDkD,aAAe,CAChBnE,MAAO,EACPS,UAAU,EACVC,gBAAiB,EACjBP,UAAW,GACXU,WAAW,GAEf,EAAKuD,MAAQ,EAAKC,iBATH,E,sEAaf,OACI,kBAAC,IAAD,CAAUD,MAAOpD,KAAKoD,OAClB,yBAAKE,MAAO,CAACC,OAAQ,SACjB,kBAAE,EAAF,CAAMH,MAAOpD,KAAKoD,Y,uCAO9B,OAAOI,YAAY1E,EAAakB,KAAKmD,kB,GAxBF/C,IAAMC,WCK7BoD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,SD0HpD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvB,MAAK,SAAAwB,GACjCA,EAAaC,kB","file":"static/js/main.609ae875.chunk.js","sourcesContent":["export const QUESTION_ANSWER = 'QUESTION_ANSWER';\r\nexport const CHANGE_QUESTION = 'CHANGE_QUESTION';\r\nexport const SUBMIT = 'SUBMIT';\r\nexport const INIT_QUESTIONS = 'INIT_QUESTIONS';\r\nexport const RESET = 'RESET';\r\nexport const CLOSE_POPUP = 'CLOSE_POPUP';\r\n\r\nexport function questionAnswer(index, answer) {\r\n    return {\r\n        type: QUESTION_ANSWER,\r\n        payload: {index, answer}\r\n    };\r\n}\r\n\r\nexport function changeQuestion(index) {\r\n    return {\r\n        type: CHANGE_QUESTION,\r\n        payload: {index}\r\n    };\r\n}\r\n\r\nexport function submit(questions) {\r\n    return {\r\n        type: SUBMIT,\r\n        payload: {questions}\r\n    };\r\n}\r\n\r\nexport function reset(questions) {\r\n    return {\r\n        type: RESET,\r\n        payload: {questions}\r\n    };\r\n}\r\n\r\nexport function initQuestions(questions) {\r\n    return {\r\n        type: INIT_QUESTIONS,\r\n        payload: {questions}\r\n    };\r\n}\r\n\r\nexport function closePopup() {\r\n    return {\r\n        type: CLOSE_POPUP,\r\n    };\r\n}","import {combineReducers} from 'redux';\r\nimport {CLOSE_POPUP, QUESTION_ANSWER} from './actions'\r\nimport { CHANGE_QUESTION } from './actions'\r\nimport { SUBMIT } from './actions'\r\nimport { INIT_QUESTIONS } from './actions'\r\nimport { RESET } from './actions'\r\n\r\nfunction score(state = 0, action = {}) {\r\n    switch (action.type) {\r\n        case SUBMIT :\r\n            let resp = action.payload.questions.filter(question => question.answer === question.userAnswer);\r\n            return resp.length;\r\n        case RESET :\r\n            return 0;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction finished(state = false, action = {}) {\r\n    switch (action.type) {\r\n        case SUBMIT :\r\n            return true;\r\n        case RESET :\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction currentQuestion(state = 0, action = {}) {\r\n    switch (action.type) {\r\n        case CHANGE_QUESTION :\r\n            return action.payload.index;\r\n        case RESET :\r\n            return 0;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction questions(state = [], action = {}) {\r\n    switch (action.type) {\r\n        case QUESTION_ANSWER :\r\n            return state.map((question, i) => {\r\n                return {\r\n                    ...question,\r\n                    userAnswer: action.payload.index === i ? action.payload.answer : question.userAnswer\r\n                }\r\n            })\r\n        case INIT_QUESTIONS :\r\n        case RESET :\r\n            return action.payload.questions;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction showPopup(state = false, action = {}) {\r\n    switch (action.type) {\r\n        case SUBMIT :\r\n            return true;\r\n        case CLOSE_POPUP :\r\n        case RESET :\r\n            return false;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst GlobalState = (combineReducers({\r\n    score,\r\n    finished,\r\n    currentQuestion,\r\n    questions,\r\n    showPopup\r\n}));\r\n\r\nexport default GlobalState;","import React from 'react';\nimport './../App.css';\n\nclass Popup extends React.Component {\n    render() {\n        return (\n            <div className='popup'>\n                <div className='popup\\_inner'>\n                    <h1>Your score is {this.props.score}/10 !</h1>\n                    <button onClick={this.props.onClosePopup}>close me</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Popup;","import React from 'react' ;\r\nimport Popup from './Popup' ;\r\nimport {Button} from 'react-bootstrap';\r\nimport {closePopup} from \"../redux/actions\";\r\n\r\nexport default class Actionbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Actionbar\">\r\n                <Button variant=\"dark\" onClick={() => this.props.onChangeQuestion(this.props.currentQuestion - 1)}\r\n                        disabled={this.props.currentQuestion < 1}>Anterior</Button>\r\n                <Button variant=\"dark\" onClick={() => this.props.onChangeQuestion(this.props.currentQuestion + 1)}\r\n                        disabled={this.props.currentQuestion > 8}>Siguiente</Button>\r\n                <Button variant=\"dark\" onClick={this.props.onReset}>Reset</Button>\r\n                <Button variant=\"dark\" onClick={this.props.onSubmit}>Submit</Button>\r\n\r\n                {this.props.showPopup === true ? <Popup score={this.props.score}\r\n                                                        onClosePopup={() => {\r\n                                                            this.props.dispatch(closePopup())\r\n                                                        }}/> : null}\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n","import React from 'react' ;\r\n\r\nexport default class Question extends React.Component {\r\n    render() {\r\n        return (<h4> {this.props.pregunta} </h4>);\r\n    }\r\n}","import React from 'react' ;\r\n\r\nexport default class Answer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Answer\">\r\n                <input type=\"text\"\r\n                       placeholder=\"Type your answer\"\r\n                       value={this.props.userAnswer || ''}\r\n                       onChange={(e) => this.props.onQuestionAnswer(e.target.value)}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react' ;\r\nimport Question from './Question' ;\r\nimport Answer from './Answer' ;\r\nimport {questionAnswer} from \"../redux/actions\";\r\nimport {Dropdown, DropdownButton} from 'react-bootstrap';\r\n\r\nexport default class Content extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Content\">\r\n                <div className=\"row1\">\r\n                <div className=\"rightcol\">\r\n                    <DropdownButton variant=\"dark\" title=\"Choose Question\">\r\n                        <Dropdown.Item onClick={() => this.props.onChangeQuestion(0)}>Question 1</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => this.props.onChangeQuestion(1)}>Question 2</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => this.props.onChangeQuestion(2)}>Question 3</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => this.props.onChangeQuestion(3)}>Question 4</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => this.props.onChangeQuestion(4)}>Question 5</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => this.props.onChangeQuestion(5)}>Question 6</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => this.props.onChangeQuestion(6)}>Question 7</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => this.props.onChangeQuestion(7)}>Question 8</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => this.props.onChangeQuestion(8)}>Question 9</Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => this.props.onChangeQuestion(9)}>Question 10</Dropdown.Item>\r\n                    </DropdownButton>\r\n                    <h1 className=\"Nquestion\">Question {this.props.currentQuestion + 1}:</h1>\r\n                    <Question pregunta={this.props.question.question}/>\r\n                    <Answer\r\n                        onQuestionAnswer={(answer) => {this.props.dispatch(questionAnswer(this.props.currentQuestion, answer))}}\r\n                        userAnswer={this.props.question.userAnswer}/>\r\n                    <div>\r\n                        <h5>Tips</h5>\r\n\t\t\t\t\t\t\t{this.props.question.tips.map((tip, i) => <p key={i}>{tip}</p>)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"leftcol\">\r\n                    {this.props.question.attachment === null ? '' : <img src={this.props.question.attachment.url}/>}\r\n                </div>\r\n                </div>\r\n                    <div className=\"row2\">\r\n                        <img className=\"autor\" src={this.props.question.author.photo.url}/>\r\n                        Created by: {this.props.question.author.username}\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react' ;\r\nimport Actionbar from './Actionbar' ;\r\nimport Content from './Content' ;\r\nimport {changeQuestion, submit} from \"../redux/actions\";\r\n\r\nexport default class Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Game\">\r\n                {this.props.questions.length > 0 ? <Content question={this.props.questions[this.props.currentQuestion]}\r\n                    currentQuestion={this.props.currentQuestion}\r\n                    onChangeQuestion={(newId) => {\r\n                        this.props.dispatch(changeQuestion(newId))\r\n                    }}\r\n                    dispatch={this.props.dispatch}/> : 'Loading'}\r\n\r\n                {this.props.questions.length > 0 ?\r\n                    <Actionbar currentQuestion={this.props.currentQuestion}\r\n                               onChangeQuestion={(newId) => {\r\n                                   this.props.dispatch(changeQuestion(newId))\r\n                               }}\r\n                               onSubmit={() => {\r\n                                   this.props.dispatch(submit(this.props.questions))\r\n                               }}\r\n                               onReset={() => this.Reset()}\r\n                               finished={this.props.finished}\r\n                               score={this.props.score}\r\n                               dispatch={this.props.dispatch}\r\n                               showPopup={this.props.showPopup}/> : ''}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let newQuestions = await fetch('https://quiz.dit.upm.es/api/quizzes/random10wa?token=21f4f873938d1a74d281');\r\n        let questions = await newQuestions.json();\r\n        this.props.onInitQuestions(questions);\r\n    }\r\n\r\n    Reset() {\r\n        fetch('https://quiz.dit.upm.es/api/quizzes/random10wa?token=21f4f873938d1a74d281')\r\n            .then(res => res.json())\r\n            .then(res => this.props.onReset(res));\r\n    }\r\n}","import React from 'react' ;\r\n\r\nexport default class Navbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"Navbar\">QUIZ GAME</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport './../App.css';\nimport {connect} from 'react-redux' ;\nimport Game from \"./Game\";\nimport Navbar from \"./Navbar\";\nimport {initQuestions, reset} from './../redux/actions'\n\nfunction App(props) {\n    return (\n        <div className=\"App\">\n            <Navbar/>\n            <Game\n                questions={props.questions}\n                currentQuestion={props.currentQuestion}\n                onInitQuestions={(newQ) => {\n                    props.dispatch(initQuestions(newQ))\n                }}\n                onReset={(newQ) => {\n                    props.dispatch(reset(newQ))\n                }}\n                finished={props.finished}\n                dispatch={props.dispatch}\n                score={props.score}\n                showPopup={props.showPopup}/>\n        </div>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        ...state\n    };\n}\nexport default connect(mapStateToProps)(App);\n","import {Provider} from 'react-redux' ;\r\nimport GlobalState from './reducers' ;\r\nimport {createStore} from 'redux' ;\r\nimport React from 'react' ;\r\nimport App from '../components/App' ;\r\nimport { questions } from \"../assets/mock-data\" ;\r\n\r\nexport default class ReduxProvider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initialState = {\r\n            score: 0,\r\n            finished: false,\r\n            currentQuestion: 0,\r\n            questions: [ ],\r\n            showPopup: false\r\n        };\r\n        this.store = this.configureStore();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={this.store}>\r\n                <div style={{height: '100%'}}>\r\n                    < App store={this.store}/>\r\n                </div>\r\n            </Provider>\r\n        );\r\n    }\r\n\r\n    configureStore() {\r\n        return createStore(GlobalState, this.initialState);\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ReduxProvider from './redux/ReduxProvider';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<ReduxProvider/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}